from aiogram import Router, F

from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters.callback_data import CallbackData

from bot.filters.menu import MainMenuCallbackData
from marzban.client import MarzbanClient


router = Router()


class OSChoiceCallback(CallbackData, prefix="connect"):
    os: str


@router.callback_query(MainMenuCallbackData.filter(F.category == "connect"))
async def connect_callback(callback: CallbackQuery) -> None:
    await callback.message.answer(
        text="–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ",
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(
                        text="ü§ñ Android",
                        callback_data=OSChoiceCallback(os="android").pack(),
                    ),
                    InlineKeyboardButton(
                        text="üçé iOS",
                        callback_data=OSChoiceCallback(os="ios").pack(),
                    ),
                ],
                [
                    InlineKeyboardButton(
                        text="üñ•Ô∏è  Windows",
                        callback_data=OSChoiceCallback(os="windows").pack(),
                    ),
                    InlineKeyboardButton(
                        text="üíª MacOS",
                        callback_data=OSChoiceCallback(os="mac_os").pack(),
                    ),
                ],
            ],
        ),
    )


download_links = {
    "android": "https://play.google.com/store/apps/details?id=com.v2raytun.android",
    "ios": "https://apps.apple.com/en/app/v2raytun/id6476628951",
    "windows": "https://storage.v2raytun.com/v2RayTun_Setup.exe",
    "mac_os": "https://apps.apple.com/en/app/v2raytun/id6476628951",
}
deeplink_template = "https://gadvpn-preview.ru/?target={subscription_url}"
MANUAL_TEXT = """
1. üì• <b>–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b> <code>v2rantun</code> –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ.
2. üí° <b>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "<i>–î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á</i>"</b> –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
3. üîµ <b>–ù–∞–∂–º–∏—Ç–µ —Å–∏–Ω—é—é –∫–Ω–æ–ø–∫—É</b> –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è.

<b>–ì–æ—Ç–æ–≤–æ! üéâ –¢–µ–ø–µ—Ä—å –≤—ã –ø–æ–¥–∫–ª—é—á–µ–Ω—ã!</b>

"""


@router.callback_query(OSChoiceCallback.filter())
async def os_choice_callback(
    callback: CallbackQuery,
    callback_data: OSChoiceCallback,
    marzban: MarzbanClient,
) -> None:
    user_subscription = await marzban.get_user_subscription(callback.from_user.id)
    download_link = download_links[callback_data.os]
    deeplink = deeplink_template.format(subscription_url=user_subscription)

    await callback.message.answer(
        text=MANUAL_TEXT,
        reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [
                    InlineKeyboardButton(text="üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", url=download_link),
                ],
                [
                    InlineKeyboardButton(text="üîë –î–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á", url=deeplink),
                ],
            ],
        ),
    )
